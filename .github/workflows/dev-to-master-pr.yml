name: Auto Merge and Publish

on:
  push:
    branches:
      - dev

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Build test
        run: npm run build

      - name: Create and auto-merge PR
        id: create-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            console.log(`Checking for existing PRs from dev to master in ${owner}/${repo}`);
            
            try {
              // 기존 PR 확인
              const existingPRs = await github.rest.pulls.list({
                owner,
                repo,
                state: 'open',
                head: `${owner}:dev`,
                base: 'master'
              });
              
              let prNumber;
              
              if (existingPRs.data.length > 0) {
                // 기존 PR이 있는 경우
                prNumber = existingPRs.data[0].number;
                console.log(`Found existing PR #${prNumber}, will try to merge it`);
              } else {
                // 새 PR 생성
                console.log(`Creating new PR from dev to master`);
                const newPR = await github.rest.pulls.create({
                  owner,
                  repo,
                  title: '🔄 개발 브랜치 변경사항 마스터 브랜치 자동 반영',
                  head: 'dev',
                  base: 'master',
                  body: '## 자동 생성된 PR\n\ndev 브랜치 변경사항을 master에 반영합니다.'
                });
                prNumber = newPR.data.number;
                console.log(`Created new PR #${prNumber}`);
              }
              
              // PR 머지 시도
              await github.rest.pulls.merge({
                owner,
                repo,
                pull_number: prNumber,
                merge_method: 'merge'
              });
              
              console.log(`PR #${prNumber} merged successfully`);
              return { pr_number: prNumber, merged: true };
            } catch (error) {
              console.error(`Error during PR creation or merge: ${error.message}`);
              core.setFailed(error.message);
              return { error: error.message };
            }
      
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Setup Node.js for publish
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies on master
        run: npm ci --legacy-peer-deps
      
      - name: Git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Bump version
        run: "npm version patch -m \"🔖 버전 업데이트: %s\""
      
      - name: Push version tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          branch: master
          tags: true
      
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 